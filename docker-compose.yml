version: "3.8"

networks:
  dev-env:
    external: true

services:
  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    ports:
      - "3100"
    volumes:
      - ./loki-data:/loki
      - ./config/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - dev-env
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./config/promtail-config.yaml:/etc/promtail/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - dev-env
    depends_on:
      - loki
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3101:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./config/grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./config/grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=yoursecurepassword
      - GF_INSTALL_PLUGINS=
    networks:
      - dev-env
    depends_on:
      - loki
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090"
    volumes:
      - ./config/prometheus-config.yml:/etc/prometheus/prometheus.yml
      - ./prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - dev-env
    restart: unless-stopped
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
    container_name: postgres_exporter_mykreno
    restart: unless-stopped
    environment:
      # This connection string tells the exporter how to connect to your database.
      # It uses the service name 'postgres_mykreno' as the host because they are on the same Docker network.
      - DATA_SOURCE_NAME=postgresql://postgres:dGhpcyBpcyBhIHNlY3JldCB@postgres_mykreno:5432/adminjs?sslmode=disable
    ports:
      # Expose the exporter's /metrics endpoint on port 9187 for Prometheus and for debugging.
      - "9187"
    networks:
      - dev-env
